cor(1:10,2:11)
complete.cases("331.csv")
help("complete.cases")
complete.cases(read.csv("331.csv"))
help("count")
?count
help("sum")
length(read.csv("331.csv"))
read.csv('331.csv')
length(read.csv("331.csv"))
x< read.csv("331.csv")
x<- read.csv("331.csv")
length(x)
head(x)
length(x$Date)
dim(x)
help("dim")
dim(x[1])
dim(x[,1])
dim(x[1,])
str(x)
y <-dim(x)
y
y[1]
y[2]
dimnames(y) <- c("numRows", "numCols")
x
x[complete.cases(x)]
help("complete.cases")
y <- complete.cases(x)
z <- x[y]
z <- x(y)
y
sum(y)
z <- x[y]
z
cor(x ,y)
head(x)
cor(x[,sulfate], x[,nitrate])
x[,nitrate]
x[,ID]
x[,sulfate]
x$sulfate
cor(x$sulfate,x$nitrate)
xSulf <- is.na(X)
x
xSulf <- is.na(X)
xSulf <- is.na(x)
xSulf
xSulf <- is.na(x$sulfate)
xsulf
xSulf
xSulf <- z$sulfate(!is.na(x$sulfate))
xSulf <- x$sulfate(!is.na(x$sulfate))
xSulf <- x$sulfate[!is.na(x$sulfate)]
xssulf
xSulf
xNitrate <- x$nitrate[!is.na(x$nitrate)]
cor(xSulf, xNitrate)
help("cor")
cor(x$sulfate, x$nitrate, na.rm=TRUE)
cor(x$sulfate, x$nitrate, use="complete.obs")
complete.cases(x$sulfate)
complete.cases(x$sulfate, x$nitrate)
sum(complete.cases(x$sulfate, x$nitrate))
z
z <- c(x$sulfate, x$nitrate)
z
z <- data.frame(x$sulfate, x$nitrate)
z
head(z)
z <- data.frame(sulfate=x$sulfate, nitrate=x$nitrate)
head(z)
z(,74)
z[,74]
z
z[74]
z[74,]
z[75,]
z
x
z
x <- read.csv("331.csv")
x[1166,]
x[1167,]
x[1622,]
x[,date] == "3/14/2001"
x[which(x[,date] == "3/14/2001")]
subset(x,x$Date == "3/14/2001")
subset(x,x$Date == "2001-03-14")
x[.73]
x[,73]
x[73,]
x[79,]
help("read.csv")
y <- data.frame(sulfate=x$sulfate,nitrate=x$nitrate)
head(y)
cor(y$sulfate,y$nitrate,use="complete.obs")
help("list.files")
caseComp <- complete.cases(x)
y$sulfate[1]
y$sulfate[caseComp]
source("corr.R")
getwd()
setwd("..")
getwd()
source("corr.R")
corr("specdata")
source("corr.R");corr("specdata")
help("file.info")
file.info("specdata/331.csv")
file.info("specdata/331.csv")[,1]
source("corr.R");corr("specdata")
source("corr.R");corr("specdata")
source("corr.R");corr("specdata", 50)
source("corr.R");corr("specdata", 10)
complete.cases("specdata/331.csv")
x
complete.cases(x)
sum(complete.cases(x))
sum(complete.cases(x))
source("corr.R");corr("specdata", 10)
caseComplete <- sum(complete.cases(x))
caseComplete
caseComplete <- sum(complete.cases("specdata/331.csv"))
caseComplete
help("read.csv")
help("summary")
source("corr.R");corr("specdata", 10)
source("corr.R");corr("specdata", 10)
source("corr.R");corr("specdata", 10)
source("corr.R");corr("specdata", 10)
source("corr.R");corr("specdata", 10)
source("corr.R");corr("specdata", 10)
source("corr.R");corr("specdata", 90)
source("corr.R");corr("specdata", 3000)
source("corr.R");corr("specdata", 300)
source("corr.R");corr("specdata", 30)
source("corr.R");corr("specdata", 30)
warnings()
source("corr.R");corr("specdata", 300)
source("corr.R");corr("specdata", 300)
source("corr.R");corr("specdata", 3000)
source("corr.R");corr("specdata", 500)
source("corr.R");corr("specdata", 500)
source("corr.R");corr("specdata", 500)
source("corr.R");corr("specdata", 500)
source("corr.R");corr("specdata", 150)
cr <- corr("specdata",150)
head(cr)
source("corr.R")
cr <- corr("specdata",150)
head(cr)
source("corr.R");cr <- corr("specdata",150)
source("corr.R");cr <- corr("specdata",150)
source("corr.R");cr <- corr("specdata",150)
head(cr)
summary(cr)
cr<- corr("specdata", 5000)
summary(cr)
source("corr.R");cr <- corr("specdata",150)
length(cr)
cr <- corr("specdata", 5000)
length(cr)
summary(cr)
save("corr.R")
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata", 150)
summary(cr)
head(cr)
cr <- corr("specdata", 150)
head(cr)
rm
rm()
source("corr.R");cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
source("corr.R")
cr <-corr("specdata", 5000); summary(cr)
cr <-corr("specdata", 150); summary(cr)
tmp <- vector("numeric"); summary(tmp)
help("summary")
length(cr)
cr <-corr("specdata"); summary(cr); length(cr)
source("corr.R")
cr <-corr("specdata"); summary(cr); length(cr)
source("corr.R")
cr <-corr("specdata"); summary(cr); length(cr)
source("corr.R")
cr <-corr("specdata"); summary(cr); length(cr)
cr <-corr("specdata", 150); summary(cr); length(cr)
head(cr)
cr <-corr("specdata", 400); headr(cr); summary(cr); length(cr)
cr <-corr("specdata", 400); head(cr); summary(cr); length(cr)
cr <-corr("specdata", 5000); head(cr); summary(cr); length(cr)
cr <-corr("specdata"); head(cr); summary(cr); length(cr)
source("hhtp://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
cube <- function(x, n) {
x^3
}
cube(3)
rm()
x <- 1:10
if(x > 5) {
x <- 0
}
rm
rm()
source("hw1script1.R")
z <- 10
f(3)
rm()
f <- function(x) {
g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
f(3)
ff <- function(x) {
g <- function(y) {
y +z
}
#z <- 4
x + g(x)
}
z
ff(3)
q()
library(swirl)
rm(list=ls())
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- saample(c(y,z), 100)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2(c(11,2,NA))
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
q()
library(swirl)
swirl()
my_vector <- vector(1:20)
my_vector <- C(1:20)
my_vector <- Integer(1:20)
my_vector <- as.integer(1:20)
my_vector <- vector(1:20)
my_vector <- c(1:20)
info()
play()
x <- c(1:20)
nxt()
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- ("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
q()
library(swirl)
rm(list=ls())
swswirl()
swirl()
True == True
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
! (5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 >4)
identical('twins', 'twins')
xor(5 ==6, !FALSE)
ints <- sample(1)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any( ints < 0)
all(ints > 0)
q()
?'$'
?'<<-'
source("makeVectorCacheExample.R")
View(cachemean)
a <- makeVector(c(5, 1, 3))
a$get()
a$getmean()
cachemean(a)
cachemean(a)
cachemean(a)
?
rm
rm(list=ls())
a <- makeVector(c(5, 1, 3))
source("makeVectorCacheExample.R")
a <- makeVector(c(5, 1, 3))
?solve
solve(as.matrix(1,2,3))
debug(makeVector)
a <- makeVector(c(5, 1, 3))
a <- makeVector(c(5, 1, 3))
debug()
?debug
debug(debuggingState=FALSE
)
debuggingState(on = NULL)
debuggingState(on = FALSE)
a <- makeVector(c(5, 1, 3))
a
a
a
q()
cd..
setwd(c:/users/Paul_XPS/ProgrammingAssignment2)
setwd("c:/users/Paul_XPS/ProgrammingAssignment2")
source("cachematrix.R")
makeCacheMatrix(c(1,2))
help("solve")
aa <- as.matrix(1,2,3,4,5,6)
aa
aa$1
solve(aa)
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix2.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
mx <- matrix(1:9,3,3)
mx
mtemp <- makeCacheMatrix(mx)
mtemp
cacheSolve(mx)
source("cachmatrix.R")
source("cachematrix.R")
rm(list())
rm
help("rm")
rm(list = ls())
myMatrix <- matrix(1:9,3,3)
funcMatrix <- makeCacheMatrix(myMatrix)
source("cacheMatrix.R")
funcMatrix <- makeCacheMatrix(myMatrix)
cacheSolve(funcMatrix)
debug(cacheSolve)
cacheSolve(funcMatrix)
source("cachematrix.R")
rm(list = ls())
myMatrix <- matrix(1:9,3,3)
funcMatrix <- makeCacheMatrix(myMatrix)
source("cachematrix.R")
myMatrix <- matrix(1:9,3,3)
funcMatrix <- makeCacheMatrix(myMatrix)
cacheSolve(funcMatrix)
myMatrix <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,3)
funcMatrix <- makeCacheMatrix(myMatrix)
cacheSolve(funcMatrix)
cacheSolve(funcMatrix)
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
myMatrix <- matrix(c(1,0,5,2,1,6,3,4,0),3,3)
myMatrix
funcMatrix <- makeCacheMatrix(myMatrix)
cacheSolve(funcMatrix)
cacheSolve(funcMatrix)
source("cachematrix.R")
myMatrix
myMatrix <- matrix(c(1,0,5,2,1,6,3,4,0),3,3)
funcMatrix <- makeCacheMatrix(myMatrix)
source("cachematrix.R")
cacheSolve(funcMatrix)
class(funcMatrix)
funcMatrix
help("class")
help("identical")
source("cachematrix.R")
myMatrix <- matrix(c(1,0,5,2,1,6,3,4,0),3,3)
funcMatrix <- makeCacheMatrix(myMatrix)
cacheSolve(funcMatrix)
funcMatrix <- makeCacheMatrix(myMatrix)
cacheSolve(funcMatrix)
myMatrix2 <- matrix(c(1,0,5,2,1,6,3,4,0),3,3)
funcMatrix$set(myMatrix2)
cacheSolve(funcMatrix)
rm(list=ls())
source("cachematrix.R")
myMatrix1 <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,3)
myMatrix2 <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,3)
myMatrix3 <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,99)
funcMatrix <- makeCacheMatrix(myMatrix1)
cacheSolve(funcMatrix)
funcMatrix$set(myMatrix2)
cacheSolve(funcMatrix)
rm(list=ls())
source("cachematrix.R")
myMatrix1 <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,3)
myMatrix2 <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,3)
myMatrix3 <- matrix(c(4,500,2,122,-25,455,8777,1,13),3,99)
funcMatrix <- makeCacheMatrix(myMatrix1)
cacheSolve(funcMatrix)
funcMatrix$set(myMatrix2)
cacheSolve(funcMatrix)
funcMatrix$set(myMatrix3)
cacheSolve(funcMatrix)
myMatrix3 <- matrix(c(4,500,2,122,-25,455,8777,1,33),3,3)
funcMatrix$set(myMatrix3)
cacheSolve(funcMatrix)
cacheSolve(funcMatrix)
funcMatrix$set(myMatrix2)
cacheSolve(funcMatrix)
funcMatrix$set(myMatrix1)
cacheSolve(funcMatrix)
